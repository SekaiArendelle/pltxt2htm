name: Tests

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'

jobs:
  x86_64-windows-msvc-test:
    name: x86_64-windows-msvc (test/)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: clang version
        shell: powershell
        run: |
          clang -v

      - name: Configure and build
        shell: powershell
        working-directory: test
        run: |
          xmake config -p windows -a x64 --toolchain=x86_64-windows-msvc-clang
          xmake test -v

  x86_64-w64-mingw32-test:
    name: x86_64-w64-mingw32 (test/)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Install zstd
        shell: powershell
        working-directory: test
        run: |
           Invoke-WebRequest -Uri "https://github.com/facebook/zstd/releases/download/v1.5.7/zstd-v1.5.7-win64.zip" -OutFile "zstd.zip"
           Expand-Archive -Path .\zstd.zip -DestinationPath .

      - name: Install g++
        shell: powershell
        working-directory: test
        run: |
          Invoke-WebRequest -Uri "https://github.com/24bit-xjkp/toolchains/releases/download/gcc16.0.0-rc2/x86_64-w64-mingw32-native-gcc16.tar.zst" -OutFile "x86_64-w64-mingw32-native-gcc16.tar.zst"
          .\zstd-v1.5.7-win64\zstd -d x86_64-w64-mingw32-native-gcc16.tar.zst
          tar -xf x86_64-w64-mingw32-native-gcc16.tar

      - name: g++ version
        shell: powershell
        working-directory: test
        run: |
          $env:PATH="$PWD/x86_64-w64-mingw32-native-gcc16/bin;$PWD/x86_64-w64-mingw32-native-gcc16/lib;$env:PATH"
          g++ -v

      - name: Configure and build
        shell: powershell
        working-directory: test
        run: |
          $env:PATH="$PWD/x86_64-w64-mingw32-native-gcc16/bin;$PWD/x86_64-w64-mingw32-native-gcc16/lib;$env:PATH"
          xmake config -p mingw -a x64 --toolchain=gcc
          xmake test -v

  aarch64-apple-darwin24-test-asan:
    name: aarch64-apple-darwin24 (test/, asan)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: test
        run: |
          xmake config --toolchain=clang --policies=build.sanitizer.address
          xmake test -v

  aarch64-apple-darwin24-test-ubsan:
    name: aarch64-apple-darwin24 (test/, ubsan)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: test
        run: |
          xmake config --toolchain=clang --policies=build.sanitizer.undefined
          xmake test -v

  # TODO add x86_64-linux-gnu-test-msan ci (based on Ubuntu 2604)

  x86_64-windows-msvc-cmd:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: x86_64-windows-msvc (cmd/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: clang version
        shell: powershell
        run: |
          clang -v

      - name: Configure and build
        shell: powershell
        working-directory: cmd
        run: |
          xmake config -p windows -a x64 --toolchain=x86_64-windows-msvc-clang -m ${{ matrix.build-mode }}
          xmake build -v

      - name: Run
        shell: powershell
        working-directory: cmd
        run: |
          xmake run pltxt2htm

      - name: Install
        shell: powershell
        working-directory: cmd
        run: |
          xmake install -o auto

  aarch64-apple-darwin24-cmd:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: aarch64-apple-darwin24 (cmd/, ${{ matrix.build-mode }} mode)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Verify clang installation
        run: |
          clang -v

      - name: Configure and build
        working-directory: cmd
        run: |
          xmake f -m ${{ matrix.build-mode }} --toolchain=clang
          xmake build -v

      - name: Run
        working-directory: cmd
        run: |
          xmake run pltxt2htm

      - name: Install
        working-directory: cmd
        run: |
          xmake install -o auto

  wasm32-unknown-emscripten-wasm:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: wasm32-unknown-emscripten (wasm/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v12

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: emcc version
        shell: powershell
        run: |
          emcc -v

      - name: Configure and build
        shell: powershell
        working-directory: wasm
        run: |
          xmake config -p wasm -m ${{ matrix.build-mode }} --toolchain=emcc
          xmake build -v

      - name: Install
        shell: powershell
        working-directory: wasm
        run: |
          xmake install -o auto

  x86_64-windows-msvc-py:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.13"]
        build-mode: [debug, release]

    name: x86_64-windows-msvc (py/, ${{ matrix.build-mode }} mode, python ${{ matrix.python-version }})
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Configure and build
        working-directory: py
        run: |
          xmake config -p windows -a x64 --toolchain=x86_64-windows-msvc-clang -m ${{ matrix.build-mode }}
          xmake build -v

  aarch64-apple-darwin24-py:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.13"]
        build-mode: [debug, release]

    name: aarch64-apple-darwin24 (py/, ${{ matrix.build-mode }} mode, python ${{ matrix.python-version }})
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: py
        run: |
          xmake f --toolchain=clang -m ${{ matrix.build-mode }}
          xmake build -v

  aarch64-apple-darwin24-c-debug:
    name: aarch64-apple-darwin24 (c/, debug mode)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: c
        run: |
          xmake config --toolchain=clang
          xmake build -v
