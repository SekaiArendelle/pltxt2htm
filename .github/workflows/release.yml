name: release

on:
  release:
    types: [published]

jobs:
  x86_64-windows-msvc-cmd:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: x86_64-windows-msvc (cmd/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: clang version
        shell: powershell
        run: |
          clang -v

      - name: Configure and build
        shell: powershell
        working-directory: cmd
        run: |
          xmake config -p windows -a x64 --toolchain=x86_64-windows-msvc-clang -m ${{ matrix.build-mode }}
          xmake build -v

      - name: Install
        shell: powershell
        working-directory: cmd
        run: |
          xmake install -o x86_64-windows-msvc-pltxt2htm-cmd-${{ matrix.build-mode }}

      - name: Archive install dir
        shell: powershell
        working-directory: cmd
        run: |
          $dir = Join-Path (Get-Location) "x86_64-windows-msvc-pltxt2htm-cmd-${{ matrix.build-mode }}"
          Compress-Archive -Path $dir -DestinationPath (Join-Path (Split-Path $dir) "$((Get-Item $dir).Name).zip")

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: cmd/x86_64-windows-msvc-pltxt2htm-cmd-${{ matrix.build-mode }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  aarch64-apple-darwin24-cmd:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: aarch64-apple-darwin24 (cmd/, ${{ matrix.build-mode }} mode)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Verify clang installation
        run: |
          clang -v

      - name: Configure and build
        working-directory: cmd
        run: |
          xmake f -m ${{ matrix.build-mode }} --toolchain=clang
          xmake build -v

      - name: Install
        working-directory: cmd
        run: |
          xmake install -o aarch64-apple-darwin24-pltxt2htm-cmd-${{ matrix.build-mode }}

      - name: Archive install dir
        working-directory: cmd
        run: |
          tar -cJvf aarch64-apple-darwin24-pltxt2htm-cmd-${{ matrix.build-mode }}.tar.xz aarch64-apple-darwin24-pltxt2htm-cmd-${{ matrix.build-mode }}

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: cmd/aarch64-apple-darwin24-pltxt2htm-cmd-${{ matrix.build-mode }}.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  wasm32-unknown-emscripten-wasm:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: wasm32-unknown-emscripten (wasm/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v12

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: emcc version
        shell: powershell
        run: |
          emcc -v

      - name: Configure and build
        shell: powershell
        working-directory: wasm
        run: |
          xmake config -p wasm -m ${{ matrix.build-mode }} --toolchain=emcc
          xmake build -v

      - name: Install
        shell: powershell
        working-directory: wasm
        run: |
          xmake install -o wasm32-unknown-emscripten-pltxt2htm-wasm-${{ matrix.build-mode }}

      - name: Archive install dir
        shell: powershell
        working-directory: wasm
        run: |
          $dir = Join-Path (Get-Location) "wasm32-unknown-emscripten-pltxt2htm-wasm-${{ matrix.build-mode }}"
          Compress-Archive -Path $dir -DestinationPath (Join-Path (Split-Path $dir) "$((Get-Item $dir).Name).zip")

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: wasm/wasm32-unknown-emscripten-pltxt2htm-wasm-${{ matrix.build-mode }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  aarch64-apple-darwin24-py:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        build-mode: [debug, release]

    name: aarch64-apple-darwin24 (py/, ${{ matrix.build-mode }} mode, python ${{ matrix.python-version }})
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: py
        run: |
          xmake f --toolchain=clang -m ${{ matrix.build-mode }}
          xmake build -v

      - name: Install
        working-directory: py
        run: |
          xmake install -o aarch64-apple-darwin24-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}

      - name: Archive install dir
        working-directory: py
        run: |
          tar -cJvf aarch64-apple-darwin24-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}.tar.xz aarch64-apple-darwin24-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: py/aarch64-apple-darwin24-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  x86_64-windows-msvc-py:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        build-mode: [debug, release]

    name: x86_64-windows-msvc (py/, ${{ matrix.build-mode }} mode, python ${{ matrix.python-version }})
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup XMake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Configure and build
        working-directory: py
        run: |
          xmake config -p windows -a x64 --toolchain=x86_64-windows-msvc-clang -m ${{ matrix.build-mode }}
          xmake build -v

      - name: Install
        working-directory: py
        run: |
          xmake install -o x86_64-windows-msvc-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}

      - name: Archive install dir
        working-directory: py
        run: |
          Compress-Archive -Path "x86_64-windows-msvc-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}" -DestinationPath "x86_64-windows-msvc-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}.zip"

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: py/x86_64-windows-msvc-pltxt2htm-py-cpython${{ matrix.python-version }}-${{ matrix.build-mode }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  wasm32-wasip1-cmd-release:
    strategy:
      fail-fast: false

    name: wasm32-wasip1 (cmd/, release mode)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install xmake
        run: |
          brew update
          brew install xmake

      - name: Install wasm32-wasip1-clang
        working-directory: cmd
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-27/wasi-sdk-27.0-arm64-macos.tar.gz
          tar -xf wasi-sdk-27.0-arm64-macos.tar.gz

      - name: Set PATH for clang
        working-directory: cmd
        run: echo "$PWD/wasi-sdk-27.0-arm64-macos/bin" >> $GITHUB_PATH

      - name: Verify wasm32-wasip1-clang installation
        run: |
          wasm32-wasip1-clang -v

      - name: Configure and build
        working-directory: cmd
        run: |
          xmake f -m release -p wasm --toolchain=wasm32-wasip1-clang
          xmake build -v

      - name: Install
        working-directory: cmd
        run: |
          xmake install -o wasm32-wasip1-pltxt2htm-cmd-release
          tar cJvf wasm32-wasip1-pltxt2htm-cmd-release.tar.xz wasm32-wasip1-pltxt2htm-cmd-release

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: cmd/wasm32-wasip1-pltxt2htm-cmd-release.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  x86_64-w64-mingw32-cmd:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: x86_64-w64-mingw32 (cmd/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install XMake
        shell: powershell
        working-directory: cmd
        run: |
          Invoke-WebRequest -Uri "https://github.com/xmake-io/xmake/releases/download/v3.0.3/xmake-master.win64.zip" -OutFile "xmake.zip"
          Expand-Archive -Path xmake.zip -DestinationPath .

      - name: Install zstd
        shell: powershell
        working-directory: cmd
        run: |
           Invoke-WebRequest -Uri "https://github.com/facebook/zstd/releases/download/v1.5.7/zstd-v1.5.7-win64.zip" -OutFile "zstd.zip"
           Expand-Archive -Path zstd.zip -DestinationPath .

      - name: Install g++
        shell: powershell
        working-directory: cmd
        run: |
          Invoke-WebRequest -Uri "https://github.com/24bit-xjkp/toolchains/releases/download/gcc16.0.0-rc2/x86_64-w64-mingw32-native-gcc16.tar.zst" -OutFile "x86_64-w64-mingw32-native-gcc16.tar.zst"
          ./zstd-v1.5.7-win64/zstd -d x86_64-w64-mingw32-native-gcc16.tar.zst
          tar -xf x86_64-w64-mingw32-native-gcc16.tar

      - name: Configure and build
        shell: powershell
        working-directory: cmd
        run: |
          $env:Path = "$PWD/x86_64-w64-mingw32-native-gcc16/bin;$PWD/x86_64-w64-mingw32-native-gcc16/lib;$env:Path"
          ./xmake/xmake config -p mingw -a x64 --toolchain=gcc -m ${{ matrix.build-mode }}
          ./xmake/xmake build -v

      - name: install
        shell: powershell
        working-directory: cmd
        run: |
          ./xmake/xmake install -o x86_64-w64-mingw32-pltxt2htm-cmd-${{ matrix.build-mode }}

      - name: Copy libgcc and libstdc++
        shell: powershell
        working-directory: cmd
        if: ${{ matrix.build-mode == 'debug' }}
        run: |
          Copy-Item -Path "x86_64-w64-mingw32-native-gcc16/lib/libgcc_s_seh-1.dll" -Destination "x86_64-w64-mingw32-pltxt2htm-cmd-${{ matrix.build-mode }}/"
          Copy-Item -Path "x86_64-w64-mingw32-native-gcc16/lib/libstdc++-6.dll" -Destination "x86_64-w64-mingw32-pltxt2htm-cmd-${{ matrix.build-mode }}/"

      - name: Archive install dir
        shell: powershell
        working-directory: cmd
        run: |
          $dir = Join-Path (Get-Location) "x86_64-w64-mingw32-pltxt2htm-cmd-${{ matrix.build-mode }}"
          Compress-Archive -Path $dir -DestinationPath (Join-Path (Split-Path $dir) "$((Get-Item $dir).Name).zip")

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: cmd/x86_64-w64-mingw32-pltxt2htm-cmd-${{ matrix.build-mode }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  aarch64-apple-darwin24-c:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: aarch64-apple-darwin24 (c/, ${{ matrix.build-mode }} mode)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install clang and xmake
        run: |
          brew update
          brew install llvm lld xmake

      - name: Set PATH for LLVM clang
        run: echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Configure and build
        working-directory: c
        run: |
          python3 dist.py --target=aarch64-apple-darwin24 --toolchain=clang --mode=${{ matrix.build-mode }}

      - name: Archive
        working-directory: c
        run: |
          tar -cJvf aarch64-apple-darwin24-pltxt2htm-c-${{ matrix.build-mode }}.tar.xz aarch64-apple-darwin24-pltxt2htm-c-${{ matrix.build-mode }}

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: c/aarch64-apple-darwin24-pltxt2htm-c-${{ matrix.build-mode }}.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  x86_64-windows-msvc-c:
    strategy:
      fail-fast: false
      matrix:
        build-mode: [debug, release]

    name: x86_64-windows-msvc (c/, ${{ matrix.build-mode }} mode)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: 3.13

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Configure and build
        working-directory: c
        shell: powershell
        run: |
          python dist.py --target=x86_64-windows-msvc --toolchain=clang --mode=${{ matrix.build-mode }}

      - name: Archive
        working-directory: c
        shell: powershell
        run: |
          $dir = Join-Path (Get-Location) "x86_64-windows-msvc-pltxt2htm-c-${{ matrix.build-mode }}"
          Compress-Archive -Path $dir -DestinationPath (Join-Path (Split-Path $dir) "$((Get-Item $dir).Name).zip")

      - name: Upload binary
        uses: softprops/action-gh-release@v2
        with:
          files: c/x86_64-windows-msvc-pltxt2htm-c-${{ matrix.build-mode }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
